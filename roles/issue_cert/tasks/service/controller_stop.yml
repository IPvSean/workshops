---
# - name: make sure Automation Controller is stopped
#   service:
#     name: automation-controller.service
#     state: stopped
#   register: stop_controller
#   until: stop_controller is not failed
#   retries: 5

# - name: Make sure Automation Controller is stopped
#   become: true
#   become_user: "{{ run_commands_user }}"
#   containers.podman.podman_container:
#     name: automation-controller-web
#     state: stopped
#   register: install_controller
#   until: install_controller is not failed
#   retries: 5

- name: Make sure automation-controller-web.service is stopped
  become_user: "{{ run_commands_user }}"
  ansible.builtin.service:
    name: automation-controller-web.service
    state: stopped
    scope: user
  register: install_controller
  until: install_controller is not failed
  retries: 5

- name: Make sure automation-gateway.service is stopped
  become_user: "{{ run_commands_user }}"
  ansible.builtin.service:
    name: automation-gateway.service
    state: stopped
    scope: user
  register: install_gateway
  until: install_gateway is not failed
  retries: 5

- name: Make sure automation-gateway-proxy.service is stopped
  become_user: "{{ run_commands_user }}"
  ansible.builtin.service:
    name: automation-gateway-proxy.service
    state: stopped
    scope: user
  register: install_gateway_proxy
  until: install_gateway_proxy is not failed
  retries: 5